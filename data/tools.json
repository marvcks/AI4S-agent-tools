{
  "version": "1.0.0",
  "description": "AI4S Agent Tools Registry - A collection of MCP servers for scientific computing",
  "categories": {
    "battery": {
      "name": "Battery",
      "icon": "üîã",
      "description": "Battery modeling, analysis and energy storage systems",
      "color": "#FFC107"
    },
    "biology": {
      "name": "Biology",
      "icon": "üß¨",
      "description": "Biological systems and biomolecular analysis",
      "color": "#4CAF50"
    },
    "chemistry": {
      "name": "Chemistry",
      "icon": "‚öóÔ∏è",
      "description": "Chemical compounds, reactions and catalysis",
      "color": "#2196F3"
    },
    "climate": {
      "name": "Climate",
      "icon": "üåç",
      "description": "Climate modeling, weather prediction and atmospheric sciences",
      "color": "#00ACC1"
    },
    "data": {
      "name": "Data & Analysis",
      "icon": "üìä",
      "description": "Data processing, visualization and analytics",
      "color": "#00BCD4"
    },
    "general": {
      "name": "General Tools",
      "icon": "üõ†Ô∏è",
      "description": "General purpose scientific utilities",
      "color": "#795548"
    },
    "machine-learning": {
      "name": "Machine Learning",
      "icon": "ü§ñ",
      "description": "AI/ML models and intelligent systems",
      "color": "#E91E63"
    },
    "materials": {
      "name": "Materials Science",
      "icon": "üíé",
      "description": "Materials properties, discovery and engineering",
      "color": "#9C27B0"
    },
    "medicine": {
      "name": "Medicine",
      "icon": "‚öïÔ∏è",
      "description": "Medical research, drug discovery and healthcare applications",
      "color": "#D32F2F"
    },
    "physics": {
      "name": "Physics",
      "icon": "‚öõÔ∏è",
      "description": "Physical simulations and quantum mechanics",
      "color": "#FF5722"
    },
    "research": {
      "name": "Research Tools",
      "icon": "üìö",
      "description": "Literature search, documentation and knowledge management",
      "color": "#607D8B"
    },
    "simulation": {
      "name": "Simulation",
      "icon": "üî¨",
      "description": "Molecular dynamics and computational modeling",
      "color": "#FF9800"
    }
  },
  "tools": [
    {
      "name": "ABACUS",
      "description": "First principles calculations bridge for AI models - ABACUS computational jobs",
      "author": "@ahxbcn",
      "category": "materials",
      "path": "servers/ABACUS-tools",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/ABACUS-tools && python server.py --port <PORT>\n# stdio mode\ncd servers/ABACUS-tools && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/ABACUS-tools && uv sync",
      "tools": [
        "abacus_badercharge_run",
        "abacus_cal_band",
        "abacus_cal_elastic",
        "abacus_collect_data",
        "abacus_do_relax",
        "abacus_dos_run",
        "abacus_modify_input",
        "abacus_modify_stru",
        "abacus_prepare",
        "abacus_prepare_inputs_from_relax_results",
        "generate_bulk_structure",
        "generate_deeptb_config",
        "run_abacus_onejob"
      ]
    },
    {
      "name": "ASKCOS",
      "description": "Computer-aided synthesis planning tool for retrosynthesis analysis",
      "author": "@jiaodu1307",
      "category": "chemistry",
      "transport": [
        "sse",
        "stdio"
      ],
      "tools": [
        "reaction_prediction",
        "retrosynthesis_planning",
        "single_step_retrosynthesis",
        "synthesis_route_analysis"
      ],
      "path": "servers/ASKCOS",
      "start_command": "# SSE mode\ncd servers/ASKCOS && python server.py --port <PORT>\n# stdio mode\ncd servers/ASKCOS && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/ASKCOS && uv sync"
    },
    {
      "name": "bio-agents-mcp",
      "description": "A collection of microservices for natural language interaction with biological databases, including Protein Data Bank (PDB) and ChEMBL APIs",
      "author": "@dogeplusplus",
      "category": "biology",
      "transport": [
        "sse",
        "stdio"
      ],
      "tools": [
        "aggregation_group_provenance",
        "branched_entity",
        "branched_entity_instance",
        "chemical_component",
        "drugbank_annotations",
        "get_residue_chains",
        "non_polymer_entity",
        "non_polymer_entity_instance",
        "pairwise_polymeric_interface_description",
        "pdb_cluster_data_aggregation",
        "pdb_cluster_data_aggregation_method",
        "polymer_entity",
        "polymer_entity_instance",
        "pubmed_annotations",
        "structural_assembly_description",
        "structure",
        "uniprot_annotations"
      ],
      "path": "servers/bio-agents-mcp",
      "start_command": "# SSE mode\ncd servers/bio-agents-mcp && python server.py --port <PORT>\n# stdio mode\ncd servers/bio-agents-mcp && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/bio-agents-mcp && uv sync"
    },
    {
      "name": "CatalysisMCP",
      "description": "Catalysis reaction calculations based on ADSEC workflow",
      "author": "@Rasic2",
      "category": "chemistry",
      "path": "servers/catalysis",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/catalysis && python server.py --port <PORT>\n# stdio mode\ncd servers/catalysis && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/catalysis && uv sync",
      "tools": [
        "cal_ads_energy",
        "cal_surface_energy",
        "cal_vacancy_formation_energy"
      ]
    },
    {
      "name": "CompositionDART",
      "description": "Composition Optimization via DPA-based Adaptive Refinement Targeting (DART) for materials discovery.",
      "author": "@SchrodingersCattt",
      "category": "materials",
      "path": "servers/CompositionDART",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/CompositionDART && python server.py --port <PORT>\n# stdio mode\ncd servers/CompositionDART && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/CompositionDART && uv sync",
      "tools": [
        "run_ga"
      ]
    },
    {
      "name": "data_analysis",
      "description": "A simplified tool for data analysis",
      "author": "@nlz25",
      "category": "data",
      "tools": [
        "analyze_csv_data"
      ],
      "path": "servers/data_analysis",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/data_analysis && python server.py --port <PORT>\n# stdio mode\ncd servers/data_analysis && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/data_analysis && uv sync"
    },
    {
      "name": "deepmd_docs_rag",
      "description": "DeepMD documentation RAG server",
      "author": "@felix5572",
      "category": "materials",
      "tools": [
        "deepmd-docs-workflow",
        "upload_single_file_to_deepmd_knowledge_base"
      ],
      "path": "servers/deepmd_docs_rag",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/deepmd_docs_rag && python server.py --port <PORT>\n# stdio mode\ncd servers/deepmd_docs_rag && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/deepmd_docs_rag && uv sync"
    },
    {
      "name": "dna_sequence_analyzer",
      "description": "DNA sequence analysis tool with length calculation, base counting, GC content, reverse complement, and translation using the standard genetic code. Option to stop at stop codons.",
      "author": "@lhappy",
      "category": "biology",
      "transport": [
        "sse",
        "stdio"
      ],
      "tools": [
        "analyze_dna_sequence",
        "reverse_complement",
        "translate_dna"
      ],
      "path": "servers/dna_sequence_analyzer",
      "start_command": "# SSE mode\ncd servers/dna_sequence_analyzer && python server.py --port <PORT>\n# stdio mode\ncd servers/dna_sequence_analyzer && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/dna_sequence_analyzer && uv sync"
    },
    {
      "name": "DPACalculatorServer",
      "description": "Deep Potential Agent for atomistic simulation",
      "author": "@SchrodingersCattt",
      "category": "materials",
      "path": "servers/DPACalculator",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/DPACalculator && python server.py --port <PORT>\n# stdio mode\ncd servers/DPACalculator && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/DPACalculator && uv sync",
      "tools": [
        "calculate_elastic_constants",
        "calculate_phonon",
        "optimize_structure",
        "run_molecular_dynamics",
        "run_neb"
      ]
    },
    {
      "name": "DPComboServer",
      "description": "A Server for DP model training/finetuning/inference and dataset manipulation.",
      "author": "@SchrodingersCattt",
      "category": "materials",
      "path": "servers/DPCombo",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/DPCombo && python server.py --port <PORT>\n# stdio mode\ncd servers/DPCombo && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/DPCombo && uv sync",
      "tools": [
        "downsample_dataset",
        "evaluate_error",
        "filter_outliers",
        "identify_mixedtype",
        "infer_dp_model",
        "parse_dpdata",
        "stat_af",
        "stat_efv",
        "train_dp_model"
      ]
    },
    {
      "name": "HEA_extractTool",
      "description": "extract structural data of HEA materials from searched or given publications",
      "author": "@Junshang Zhang",
      "category": "research",
      "tools": [
        "HEA_data_extract",
        "search_paper"
      ],
      "path": "servers/HEA_paper_extract",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/HEA_paper_extract && python server.py --port <PORT>\n# stdio mode\ncd servers/HEA_paper_extract && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/HEA_paper_extract && uv sync"
    },
    {
      "name": "HEA_predictTool",
      "description": "predict the crystal structure of a type of high entropy alloy",
      "author": "@Junshang Zhang",
      "category": "machine-learning",
      "tools": [
        "HEA_predictor"
      ],
      "path": "servers/HEA_predict",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/HEA_predict && python server.py --port <PORT>\n# stdio mode\ncd servers/HEA_predict && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/HEA_predict && uv sync"
    },
    {
      "name": "matbench_property_prediction",
      "description": "Predict matbench properties using deep potential models",
      "author": "2043899742@qq.com",
      "category": "materials",
      "tools": [
        "predict_matbench_properties"
      ],
      "path": "servers/matbench_property_prediction",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/matbench_property_prediction && python server.py --port <PORT>\n# stdio mode\ncd servers/matbench_property_prediction && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/matbench_property_prediction && uv sync"
    },
    {
      "name": "NMRglue Toolkit",
      "description": "NMR data processing and analysis toolkit using nmrglue library for reading, processing, and visualizing NMR spectroscopy data",
      "author": "@jiaodu1307",
      "category": "chemistry",
      "transport": [
        "sse",
        "stdio"
      ],
      "tools": [
        "apply_apodization",
        "baseline_correction",
        "get_spectrum_info",
        "peak_picking",
        "phase_correction",
        "plot_spectrum",
        "read_nmr_data",
        "write_nmr_data"
      ],
      "path": "servers/nmrglue",
      "start_command": "# SSE mode\ncd servers/nmrglue && python server.py --port <PORT>\n# stdio mode\ncd servers/nmrglue && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/nmrglue && uv sync"
    },
    {
      "name": "OptimadeServer",
      "description": "Optimade Server for materials database",
      "author": "@NingWang-art",
      "category": "materials",
      "path": "servers/Optimade_Server",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/Optimade_Server && python server.py --port <PORT>\n# stdio mode\ncd servers/Optimade_Server && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/Optimade_Server && uv sync",
      "tools": [
        "fetch_structures_with_bandgap",
        "fetch_structures_with_filter",
        "fetch_structures_with_spg"
      ]
    },
    {
      "name": "orca_tools",
      "description": "ËøêË°å ORCA ËÆ°ÁÆó„ÄÇ",
      "author": "marvcks",
      "category": "chemistry",
      "tools": [
        "retrieve_content_from_orca_output",
        "run_orca_calculation"
      ],
      "path": "servers/ORCA_tools",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/ORCA_tools && python server.py --port <PORT>\n# stdio mode\ncd servers/ORCA_tools && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/ORCA_tools && uv sync"
    },
    {
      "name": "paper_search",
      "description": "Scientific literature search tool for arXiv papers",
      "author": "@lhhhappy",
      "category": "research",
      "tools": [
        "extract_info",
        "search_papers"
      ],
      "path": "servers/Paper_Search",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/Paper_Search && python server.py --port <PORT>\n# stdio mode\ncd servers/Paper_Search && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/Paper_Search && uv sync"
    },
    {
      "name": "perovskite_literature_plot",
      "description": "Plot perovskite literature data",
      "author": "Haoming Yan",
      "category": "data",
      "tools": [
        "plot_pce_vs_time_from_excel",
        "plot_solar_cell_structure_vs_time",
        "plot_structure_count_vs_time"
      ],
      "path": "servers/perovskite_literature_plot",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/perovskite_literature_plot && python server.py --port <PORT>\n# stdio mode\ncd servers/perovskite_literature_plot && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/perovskite_literature_plot && uv sync"
    },
    {
      "name": "pubchem",
      "description": "PubChem compound data retrieval",
      "author": "@PhelanShao",
      "category": "chemistry",
      "path": "servers/pubchem",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/pubchem && python server.py --port <PORT>\n# stdio mode\ncd servers/pubchem && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/pubchem && uv sync",
      "tools": [
        "download_structure",
        "get_pubchem_data"
      ]
    },
    {
      "name": "PyMOL",
      "description": "PyMOL molecular visualization and analysis tool integration",
      "author": "@vrtejus",
      "category": "chemistry",
      "transport": [
        "sse",
        "stdio"
      ],
      "tools": [
        "parse_and_execute"
      ],
      "path": "servers/pymol-mcp",
      "start_command": "# SSE mode\ncd servers/pymol-mcp && python server.py --port <PORT>\n# stdio mode\ncd servers/pymol-mcp && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/pymol-mcp && uv sync"
    },
    {
      "name": "PYSR-Symbolic-Regression",
      "description": "PYSR-Symbolic-Regression",
      "author": "@lhhhappy",
      "category": "physics",
      "tools": [
        "symbolic_regression"
      ],
      "path": "servers/Symbolic_regression",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/Symbolic_regression && python server.py --port <PORT>\n# stdio mode\ncd servers/Symbolic_regression && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/Symbolic_regression && uv sync"
    },
    {
      "name": "RDKit Toolkit",
      "description": "Provides fundamental cheminformatics capabilities like molecule handling, descriptor calculation, and visualization.",
      "author": "@jiaodu1307",
      "category": "chemistry",
      "transport": [
        "stdio",
        "sse"
      ],
      "tools": [
        "draw_molecule_svg",
        "generate_fingerprint",
        "get_basic_properties",
        "substructure_search",
        "validate_smiles"
      ],
      "path": "servers/RDKit",
      "start_command": "# SSE mode\ncd servers/RDKit && python server.py --port <PORT>\n# stdio mode\ncd servers/RDKit && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/RDKit && uv sync"
    },
    {
      "name": "StructureGenerateServer",
      "description": "Generate structures with ASE, CALYPSO, and CrystalFormer",
      "author": "@A-LOST-WAPITI",
      "category": "materials",
      "tools": [
        "add_cell_for_molecules",
        "build_bulk_structure_by_template",
        "build_bulk_structure_by_wyckoff",
        "build_molecule_structure_from_g2database",
        "build_molecule_structures_from_smiles",
        "build_surface_adsorbate",
        "build_surface_interface",
        "build_surface_slab",
        "generate_calypso_structures",
        "generate_crystalformer_structures",
        "make_supercell_structure"
      ],
      "path": "servers/structure_generate",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/structure_generate && python server.py --port <PORT>\n# stdio mode\ncd servers/structure_generate && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/structure_generate && uv sync"
    },
    {
      "name": "SuperconductorServer",
      "description": "Superconductor critical temperature prediction",
      "author": "@liuyuxiang92",
      "category": "materials",
      "path": "servers/superconductor",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "See README for details",
      "install_command": "Contact @liuyuxiang92 for access",
      "tools": [
        "calculate_enthalpy",
        "generate_calypso_structure",
        "generate_crystalformer_structures",
        "predict_superconductor_Tc"
      ]
    },
    {
      "name": "ThermoelectricMaterialsServer",
      "description": "Thermoelectric materials screening with CALYPSO",
      "author": "@liuyuxiang92",
      "category": "materials",
      "path": "servers/thermoelectric",
      "transport": [
        "sse",
        "stdio"
      ],
      "start_command": "# SSE mode\ncd servers/thermoelectric && python server.py --port <PORT>\n# stdio mode\ncd servers/thermoelectric && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/thermoelectric && uv sync",
      "tools": [
        "calculate_enthalpy",
        "generate_calypso_structures",
        "generate_crystalformer_structures",
        "predict_thermoelectric_properties",
        "screen_thermoelectric_candidate"
      ]
    },
    {
      "name": "Zotero",
      "description": "Zotero literature management and semantic search integration for scientific research",
      "author": "@54yyyu",
      "category": "research",
      "transport": [
        "sse",
        "stdio"
      ],
      "tools": [
        "advanced_search",
        "batch_update_tags",
        "create_note",
        "get_annotations",
        "get_collection_items",
        "get_collections",
        "get_item_children",
        "get_item_fulltext",
        "get_item_metadata",
        "get_notes",
        "get_recent",
        "get_search_database_status",
        "get_tags",
        "search_by_tag",
        "search_items",
        "search_notes",
        "semantic_search",
        "update_search_database"
      ],
      "path": "servers/zotero-mcp",
      "start_command": "# SSE mode\ncd servers/zotero-mcp && python server.py --port <PORT>\n# stdio mode\ncd servers/zotero-mcp && MCP_TRANSPORT=stdio python server.py",
      "install_command": "cd servers/zotero-mcp && uv sync"
    }
  ]
}